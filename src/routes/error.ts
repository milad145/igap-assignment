import express from 'express';import {formatIpAddress} from '../utils/utility';import {Request, Response, NextFunction} from 'express';export const unhandled = express.Router();unhandled.use((req, res) => {    console.warn(`Unauthorized request '${req.method || "Unknown"} ${req.originalUrl || "request"}' made from '${formatIpAddress(req.ip)}'!`);    res.status(403).end();});export const exception = (err: Error, req: Request, res: Response, next: NextFunction) => {    handleException(next, err, req, res);};function handleException(next: NextFunction, err: Error, req: Request, res: Response) {    if (err && err.name === 'PreconditionFailedError') {        res.status(412).end();    } else {        console.error(`Exception while processing request '${req.method || "Unknown"} ${req.originalUrl || "request"}' from '${formatIpAddress(req.ip)}':`, err);        res.status(403).end();    }}